{"version":3,"file":"component---src-pages-tictactoe-view-jsx-84dd621d83df5bd3c75c.js","mappings":"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","sources":["webpack://my-react-final-test-project/./src/components/Navbar.jsx","webpack://my-react-final-test-project/./src/components/Layout.jsx","webpack://my-react-final-test-project/./src/components/tic-tac-toe/Square.jsx","webpack://my-react-final-test-project/./src/components/tic-tac-toe/Board.jsx","webpack://my-react-final-test-project/./src/components/tic-tac-toe/TicTacToe.jsx","webpack://my-react-final-test-project/./src/pages/TictactoeView.jsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"../assets/scss/_Navbar.scss\";\n\nconst Navbar = () => {\n  return (\n    <>\n      <div className=\"nav\">\n        <Link to=\"/CalculatorView\">Calculator</Link>\n        <Link to=\"/ColorPanelView\">ColorPanel</Link>\n        <Link to=\"/TictactoeView\">TictactoeView</Link>\n      </div>\n    </>\n  );\n};\n\nexport default Navbar;\n","// src/components/Layout.js\nimport React from \"react\";\nimport Navbar from \"./Navbar\";\n\nconst Layout = ({ children }) => (\n  <div>\n    <Navbar />\n  </div>\n);\n\nexport default Layout;\n","import React from \"react\";\nimport \"../../assets/scss/_Tictactoe.scss\";\n\nexport default function Square({ value, onSquareClick }) {\n  return (\n    <>\n      <button className=\"square\" onClick={onSquareClick}>\n        {value}\n      </button>\n    </>\n  );\n}\n","import React from \"react\"; // 引入 React 庫\nimport Square from \"./Square\"; // 引入 Square 組件\nimport \"../../assets/scss/_Tictactoe.scss\"; // 引入樣式表\n\nexport default function Board({ xIsNext, squares, onPlay }) {\n  // 定義 Board 組件，接收 xIsNext, squares, onPlay 作為 props\n\n  // 點擊方格時的處理函數\n  const handleClick = (i) => {\n    // 如果已經有贏家或者該方格已經被點擊過，則不執行任何操作\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    // 複製當前的 squares 狀態\n    const nextSquares = squares.slice();\n    console.log(\"Square\", i); // 輸出點擊的方格索引\n    // 根據 xIsNext 決定標記 \"X\" 或 \"O\"\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    // 調用 onPlay 函數，更新 squares 狀態\n    onPlay(nextSquares);\n  };\n\n  // 計算贏家函數\n  const calculateWinner = (squares) => {\n    // 所有可能的贏家組合\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    // 檢查每一組合是否有三個相同的標記\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        return squares[a]; // 返回贏家 \"X\" 或 \"O\"\n      }\n    }\n    return null; // 沒有贏家返回 null\n  };\n\n  // 設置狀態文字，顯示下一個玩家\n  const winner = calculateWinner(squares);\n  const status = winner\n    ? `Winner: ${winner}`\n    : `Next player: ${xIsNext ? \"X\" : \"O\"}`;\n\n  // 返回渲染的組件\n  return (\n    <>\n      <div className=\"status\">{status}</div> {/* 狀態文字 */}\n      <div className=\"board-item\">\n        <Square value={squares[0]} onSquareClick={() => handleClick(0)} />\n        <Square value={squares[1]} onSquareClick={() => handleClick(1)} />\n        <Square value={squares[2]} onSquareClick={() => handleClick(2)} />\n        <Square value={squares[3]} onSquareClick={() => handleClick(3)} />\n        <Square value={squares[4]} onSquareClick={() => handleClick(4)} />\n        <Square value={squares[5]} onSquareClick={() => handleClick(5)} />\n        <Square value={squares[6]} onSquareClick={() => handleClick(6)} />\n        <Square value={squares[7]} onSquareClick={() => handleClick(7)} />\n        <Square value={squares[8]} onSquareClick={() => handleClick(8)} />\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport Board from \"./Board\";\nimport { useState } from \"react\";\nimport \"../../assets/scss/_Tictactoe.scss\";\n\nexport default function TicTacToe() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const currentSquares = history[currentMove];\n  const xIsNext = currentMove % 2 === 0;\n  const handlePlay = (nextSquares) => {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  };\n\n  const jumpTo = (nextMove) => setCurrentMove(nextMove);\n\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = `回到第${move}步`;\n    } else {\n      description = \"回到開始\";\n    }\n    return (\n      <>\n        <li key={move}>\n          <button onClick={() => jumpTo(move)}> {description}</button>\n        </li>\n      </>\n    );\n  });\n\n  return (\n    <>\n      <div className=\"game\">\n        <div className=\"board\">\n          <Board\n            xIsNext={xIsNext}\n            squares={currentSquares}\n            onPlay={handlePlay}\n          />\n        </div>\n        <div className=\"game-info\">\n          <h4>遊戲歷程</h4>\n          <p>{moves}</p>\n        </div>\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport TicTavToe from \"../components/tic-tac-toe/TicTacToe\";\nimport Layout from \"../components/Layout\";\n\nexport default function TicTacToe() {\n  return (\n    <>\n      <Layout />\n      <TicTavToe />\n    </>\n  );\n}\n"],"names":["className","to","children","Square","value","onSquareClick","onClick","Board","xIsNext","squares","onPlay","handleClick","i","calculateWinner","nextSquares","slice","console","log","lines","length","a","b","c","winner","status","TicTacToe","history","setHistory","useState","Array","fill","currentMove","setCurrentMove","currentSquares","moves","map","move","description","key","nextHistory","Layout"],"sourceRoot":""}